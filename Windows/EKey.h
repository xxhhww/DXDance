#pragma once
#include <Windows.h>
#include <unordered_map>

namespace Windows {
	enum class EKey : int {
        KEY_TAB         ,
        KEY_LEFTARROW   ,
        KEY_RIGHTARROW  ,
        KEY_UPARROW     ,
        KEY_DOWNARROW   ,
        KEY_SPACE       ,
        KEY_ENTER       ,
        KEY_ESCAPE      ,
        KEY_LSHIFT      ,
        KEY_RSHIFT      ,
        KEY_LCTRL       ,
        KEY_RCTRL       ,
        KEY_LALT        ,
        KEY_RALT        ,
        KEY_A           ,
        KEY_B           ,
        KEY_C           ,
        KEY_D           ,
        KEY_E           ,
        KEY_F           ,
        KEY_G           ,
        KEY_H           ,
        KEY_I           ,
        KEY_J           ,
        KEY_K           ,
        KEY_L           ,
        KEY_M           ,
        KEY_N           ,
        KEY_O           ,
        KEY_P           ,
        KEY_Q           ,
        KEY_R           ,
        KEY_S           ,
        KEY_T           ,
        KEY_U           ,
        KEY_V           ,
        KEY_W           ,
        KEY_X           ,
        KEY_Y           ,
        KEY_Z           ,
        KEY_0           ,
        KEY_1           ,
        KEY_2           ,
        KEY_3           ,
        KEY_4           ,
        KEY_5           ,
        KEY_6           ,
        KEY_7           ,
        KEY_8           ,
        KEY_9           ,
        KEY_COUNT       ,
	};

    static std::unordered_map<int, EKey> sEKeyMap = {
        { VK_TAB        , EKey::KEY_TAB         },
        { VK_LEFT       , EKey::KEY_LEFTARROW   },
        { VK_RIGHT      , EKey::KEY_RIGHTARROW  },
        { VK_UP         , EKey::KEY_UPARROW     },
        { VK_DOWN       , EKey::KEY_DOWNARROW   },
        { VK_SPACE      , EKey::KEY_SPACE       },
        { VK_RETURN     , EKey::KEY_ENTER       },
        { VK_ESCAPE     , EKey::KEY_ESCAPE      },
        { VK_LSHIFT     , EKey::KEY_LSHIFT      },
        { VK_RSHIFT     , EKey::KEY_RSHIFT      },
        { VK_LCONTROL   , EKey::KEY_LCTRL       },
        { VK_RCONTROL   , EKey::KEY_RCTRL       },
        { VK_LMENU      , EKey::KEY_LALT        },
        { VK_RMENU      , EKey::KEY_RALT        },
        { 'A'           , EKey::KEY_A           },
        { 'B'           , EKey::KEY_B           },
        { 'C'           , EKey::KEY_C           },
        { 'D'           , EKey::KEY_D           },
        { 'E'           , EKey::KEY_E           },
        { 'F'           , EKey::KEY_F           },
        { 'G'           , EKey::KEY_G           },
        { 'H'           , EKey::KEY_H           },
        { 'I'           , EKey::KEY_I           },
        { 'J'           , EKey::KEY_J           },
        { 'K'           , EKey::KEY_K           },
        { 'L'           , EKey::KEY_L           },
        { 'M'           , EKey::KEY_M           },
        { 'N'           , EKey::KEY_N           },
        { 'O'           , EKey::KEY_O           },
        { 'P'           , EKey::KEY_P           },
        { 'Q'           , EKey::KEY_Q           },
        { 'R'           , EKey::KEY_R           },
        { 'S'           , EKey::KEY_S           },
        { 'T'           , EKey::KEY_T           },
        { 'U'           , EKey::KEY_U           },
        { 'V'           , EKey::KEY_V           },
        { 'W'           , EKey::KEY_W           },
        { 'X'           , EKey::KEY_X           },
        { 'Y'           , EKey::KEY_Y           },
        { 'Z'           , EKey::KEY_Z           },
        { '0'           , EKey::KEY_0           },
        { '1'           , EKey::KEY_1           },
        { '2'           , EKey::KEY_2           },
        { '3'           , EKey::KEY_3           },
        { '4'           , EKey::KEY_4           },
        { '5'           , EKey::KEY_5           },
        { '6'           , EKey::KEY_6           },
        { '7'           , EKey::KEY_7           },
        { '8'           , EKey::KEY_8           },
        { '9'           , EKey::KEY_9           },
    };
}